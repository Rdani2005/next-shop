generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  XS
  S
  M
  L 
  XL
  XXL
  XXXL
}

enum Gender {
  men
  women
  kid
  unisex
}

enum Role {
  admin
  user
}


model Category {
  id String @id @default(uuid())
  name String @unique
  Product Product[]
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String
  inStock     Int
  price       Float    @default(0)
  sizes       Size[]   @default([])
  slug        String   @unique
  tags        String[] @default([])
  gender      Gender

  
  category     Category       @relation(fields: [categoryId], references: [id])
  categoryId   String

  ProductImage ProductImage[]
  orderItems OrderItem[]
  @@index([gender])
}

model ProductImage {
  id  Int    @id @default(autoincrement())
  url String

  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model User {
  id            String @id @default(uuid())
  name          String
  email         String @unique
  emailVerified DateTime?
  password      String
  role          Role @default(user)
  image         String?
  address Address?
  order Order[]
}

model Country {
  id String @id
  name String
  address Address[]
  orderAddress OrderAddress[]
}

model Address {
  id String @id @default(uuid())
  firstName String
  lastName String
  address String
  address2 String?
  city String
  zipCode String
  phone String
  // Relation
  Country Country @relation(fields: [countryId], references: [id])
  countryId String
  user User @relation(fields: [userId], references: [id])
  userId String @unique
}

model Order {
  id String @id @default(uuid())
  subTotal Float
  tax Float
  total Float
  itemsInOrder Int
  isPaid Boolean @default(false)
  paidAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Relations
  user User @relation(fields: [userId], references: [id])
  userId String
  orderItems OrderItem[]
  orderAddress OrderAddress?
}

model OrderItem {
  id String @id @default(uuid())
  quantity Int
  price Float
  size Size
  order Order @relation(fields: [orderId], references: [id])
  orderId String
  product Product @relation(fields: [productId], references: [id])
  productId String
}

model OrderAddress {
  id String @id @default(uuid())
  firstName String
  lastName String
  address String
  address2 String?
  city String
  zipCode String
  phone String
  // Relation
  Country Country @relation(fields: [countryId], references: [id])
  countryId String
  order  Order @relation(fields: [orderId], references: [id])
  orderId String @unique
}
